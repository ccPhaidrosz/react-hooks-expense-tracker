{"version":3,"sources":["components/Header.js","components/Transaction.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/IncomeExpenses.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","Transaction","transaction","deleteTransaction","useContext","GlobalContext","sign","amount","className","text","Math","abs","onClick","id","state","action","type","transactions","filter","payload","initialState","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","addTransaction","Balance","total","map","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","TransactionList","key","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlFor","onChange","target","placeholder","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f11e2bb4.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Header = () => {\r\n  return <h2>Expense tracker</h2>;\r\n};\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const Transaction = ({ transaction }) => {\r\n  const { deleteTransaction } = useContext(GlobalContext);\r\n  const sign = transaction.amount < 0 ? '-' : '+';\r\n\r\n  return (\r\n    <li className={transaction.amount < 0 ? 'minus' : 'plus'}>\r\n      {transaction.text}{' '}\r\n      <span>\r\n        {sign}${Math.abs(transaction.amount)}\r\n      </span>\r\n      <button\r\n        onClick={() => deleteTransaction(transaction.id)}\r\n        className='delete-btn'\r\n      >\r\n        x\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n","export default (state, action) => {\r\n  switch (action.type) {\r\n    case 'DELETE_TRANSACTION':\r\n      return {\r\n        ...state,\r\n        transactions: state.transactions.filter(\r\n          (transaction) => transaction.id !== action.payload\r\n        ),\r\n      };\r\n    case 'ADD_TRANSACTION':\r\n      return {\r\n        ...state,\r\n        transactions: [action.payload, ...state.transactions],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { createContext, useReducer } from 'react';\r\nimport { Transaction } from '../components/Transaction';\r\nimport AppReducer from './AppReducer';\r\n\r\n// intial state\r\nconst initialState = {\r\n  transactions: [],\r\n};\r\n\r\n// Create context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n// Provider component\r\nexport const GlobalProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n  //Actions\r\n  function deleteTransaction(id) {\r\n    dispatch({\r\n      type: 'DELETE_TRANSACTION',\r\n      payload: id,\r\n    });\r\n  }\r\n\r\n  function addTransaction(transaction) {\r\n    dispatch({\r\n      type: 'ADD_TRANSACTION',\r\n      payload: transaction,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        transactions: state.transactions,\r\n        deleteTransaction,\r\n        addTransaction,\r\n      }}\r\n    >\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const Balance = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n  const amounts = transactions.map((transaction) => transaction.amount);\r\n\r\n  const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n  return (\r\n    <>\r\n      <h4>Your Balance</h4>\r\n      <h1 id='balance'>${total}</h1>\r\n    </>\r\n  );\r\n};\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const IncomeExpenses = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n\r\n  const amounts = transactions.map((transaction) => transaction.amount);\r\n\r\n  const income = amounts\r\n    .filter((item) => item > 0)\r\n    .reduce((acc, item) => (acc += item), 0)\r\n    .toFixed(2);\r\n\r\n  const expense = (\r\n    amounts.filter((item) => item < 0).reduce((acc, item) => (acc += item), 0) *\r\n    -1\r\n  ).toFixed(2);\r\n\r\n  return (\r\n    <div className='inc-exp-container'>\r\n      <div>\r\n        <h4>Income</h4>\r\n        <p className='money plus'>+${income}</p>\r\n      </div>\r\n      <div>\r\n        <h4>Expense</h4>\r\n        <p className='money minus'>-${expense}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport { Transaction } from './Transaction';\r\n\r\nexport const TransactionList = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n\r\n  return (\r\n    <>\r\n      <h3>History</h3>\r\n      <ul className='list'>\r\n        {transactions.map((transaction) => (\r\n          <Transaction key={transaction.id} transaction={transaction} />\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n","import React, { useContext, useState } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const AddTransaction = () => {\r\n  const [text, setText] = useState('');\r\n  const [amount, setAmount] = useState('');\r\n\r\n  const { addTransaction } = useContext(GlobalContext);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const newTransaction = {\r\n      id: Math.floor(Math.random() * 100000000),\r\n      text,\r\n      amount: +amount,\r\n    };\r\n    addTransaction(newTransaction);\r\n    setText('');\r\n    setAmount(0);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h3>Add new transaction</h3>\r\n      <form onSubmit={onSubmit}>\r\n        <div className='form-control'>\r\n          <label htmlFor='text'>Text</label>\r\n          <input\r\n            type='text'\r\n            value={text}\r\n            onChange={(e) => setText(e.target.value)}\r\n            placeholder='Enter text...'\r\n          />\r\n        </div>\r\n        <div className='form-control'>\r\n          <label htmlFor='amount'>\r\n            Amount <br />\r\n            (negative - expense, positive - income)\r\n          </label>\r\n          <input\r\n            type='number'\r\n            value={amount}\r\n            onChange={(e) => setAmount(e.target.value)}\r\n            placeholder='Enter amount...'\r\n          />\r\n        </div>\r\n        <button className='btn'>Add transaction</button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\nimport { Header } from './components/Header';\nimport { Balance } from './components/Balance';\nimport { IncomeExpenses } from './components/IncomeExpenses';\nimport { TransactionList } from './components/TransactionList';\nimport { AddTransaction } from './components/AddTransaction';\n\nimport { GlobalProvider } from './context/GlobalState';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header />\n      <div className='container'>\n        <Balance />\n        <IncomeExpenses />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}